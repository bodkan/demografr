# Workflow derived from https://github.com/r-lib/actions/tree/master/examples
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help
on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

name: test-coverage

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test-coverage:
    runs-on: ubuntu-latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v3

      - name: Install dependencies on Linux
        run: sudo apt-get install libgsl-dev libwebp-dev libx11-dev libcairo2-dev

      - name: Compile and install SLiM
        run: |
          # download SLiM into a separate directory to avoid CRAN errors
          mkdir -p ~/deps
          cd ~/deps

          # installation instructions copied from the SLiM manual:
          wget http://benhaller.com/slim/SLiM.zip
          unzip SLiM.zip
          cd SLiM
          cmake .
          make slim

      - name: Populate PATH with compiled binaries
        run: |
          export PATH="$HOME/deps/SLiM:$PATH"
          echo "PATH=$PATH" >> ~/.Renviron

      - uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true

      - name: Install devtools-related dependencies on Linux
        if: runner.os == 'Linux'
        run: sudo apt-get install libcurl4-openssl-dev libharfbuzz-dev libfribidi-dev

      - name: Setup dedicated Python environment for slendr on Unix
        run: R -e 'slendr::setup_env(pip = TRUE, agree = TRUE)'

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::covr
          needs: coverage

      - name: Test coverage
        run: |
          covr::codecov(
            token = "${{secrets.CODECOV_TOKEN}}",
            quiet = FALSE,
            clean = FALSE,
            install_path = file.path(normalizePath(Sys.getenv("RUNNER_TEMP"), winslash = "/"), "package"),
            type = c("tests", "vignettes")
          )
        shell: Rscript {0}

      - name: Show testthat output
        if: always()
        run: |
          ## --------------------------------------------------------------------
          find ${{ runner.temp }}/package -name 'testthat.Rout*' -exec cat '{}' \; || true
        shell: bash

      - name: Upload test results
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: coverage-test-failures
          path: ${{ runner.temp }}/package
