---
title: Custom SLiM or Python simulations
output: rmarkdown::html_vignette
vignette: >
  %\VignetteIndexEntry{Custom SLiM or Python simulations}
  %\VignetteEngine{knitr::rmarkdown}
  %\VignetteEncoding{UTF-8}
---

```{r, include = FALSE}
knitr::opts_chunk$set(
  collapse = FALSE,
  comment = "#>",
  fig.align = "center",
  fig.width = 8,
  fig.height = 5,
  dpi = 100
)

devtools::load_all()
```

By default, _demografr_ uses the [_slendr_](https://github.com/bodkan/slendr) simulation framework for defining models and simulating data from them. But what if you need to do inference using your own scripts? Perhaps _slendr_'s opinionated interface doesn't allow you to do all that you need to do, such as using all powerful simulation features and options of raw SLiM or msprime? This vignette explains how you can use any standard SLiM or msprime script which produces a tree sequence file as its output for standard _demografr_ analysis.

First, let's load _demografr_ itself and also _slendr_ (which, in this vignette, will serve only for analyzing simulated tree-sequence data, but not simulations themselves).

```{r}
library(demografr)
library(slendr); init_env(quiet = TRUE)
```

Let's say we have the following two scripts which we want to use as simulation engines instead of _slendr_'s own functions `slim()` and `msprime()` (which are, by design and by necessity, quite more limited in what they can do compared to full blown SLiM or msprime):

**Example SLiM script**

```{R, echo=FALSE}
slim_path <- system.file("examples/script.slim", package = "demografr)
cat(readLines(slim_path), sep = "\n")
```

**Example Python script**

```{R, echo=FALSE}
py_path <- system.file("examples/script.py", package = "demografr)
cat(readLines(py_path), sep = "\n")
```
